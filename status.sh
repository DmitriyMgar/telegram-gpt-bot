#!/bin/bash

# Telegram GPT Bot - Status Script
# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞, –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
BOT_DIR="$SCRIPT_DIR"
PID_FILE="$BOT_DIR/bot.pid"
LOG_FILE="$BOT_DIR/bot.log"
VENV_DIR="$BOT_DIR/venv"

echo "üìä –°—Ç–∞—Ç—É—Å Telegram GPT Bot"
echo "=================================="

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Ä–µ–º–µ–Ω–∏
echo "‚è∞ –í—Ä–µ–º—è: $(date)"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ PID —Ñ–∞–π–ª–∞ –∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
echo "üîç –°—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–∞:"
if [ -f "$PID_FILE" ]; then
    PID=$(cat "$PID_FILE")
    echo "   üìÑ PID —Ñ–∞–π–ª: $PID_FILE (PID: $PID)"
    
    if ps -p $PID > /dev/null 2>&1; then
        echo "   ‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        
        # –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
        echo "   üìã –î–µ—Ç–∞–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞:"
        ps -p $PID -o pid,ppid,user,%cpu,%mem,etime,cmd --no-headers | while read line; do
            echo "      $line"
        done
        
        # –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞
        START_TIME=$(ps -p $PID -o lstart --no-headers 2>/dev/null)
        [ -n "$START_TIME" ] && echo "   üïê –ó–∞–ø—É—â–µ–Ω: $START_TIME"
        
    else
        echo "   ‚ùå –ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω (PID —É—Å—Ç–∞—Ä–µ–ª)"
        echo "   üßπ –¢—Ä–µ–±—É–µ—Ç—Å—è –æ—á–∏—Å—Ç–∫–∞ PID —Ñ–∞–π–ª–∞"
    fi
else
    echo "   ‚ö†Ô∏è  PID —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
    
    # –ü–æ–∏—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ (–∏—â–µ–º –ø–æ main.py –≤ –Ω–∞—à–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏)
    ALL_MAIN_PIDS=$(pgrep -f "main.py" 2>/dev/null || true)
    OUR_BOT_PIDS=""
    if [ -n "$ALL_MAIN_PIDS" ]; then
        for pid in $ALL_MAIN_PIDS; do
            if ps -p $pid > /dev/null 2>&1; then
                PWD_DIR=$(pwdx $pid 2>/dev/null | cut -d: -f2 | xargs 2>/dev/null || echo "unknown")
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –Ω–∞—à–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
                if [[ "$PWD_DIR" == "$BOT_DIR" ]]; then
                    OUR_BOT_PIDS="$OUR_BOT_PIDS $pid"
                fi
            fi
        done
    fi
    
    if [ -n "$OUR_BOT_PIDS" ]; then
        echo "   üîç –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞:"
        for pid in $OUR_BOT_PIDS; do
            if ps -p $pid > /dev/null 2>&1; then
                CMD=$(ps -p $pid -o cmd --no-headers 2>/dev/null)
                PWD_DIR=$(pwdx $pid 2>/dev/null | cut -d: -f2 | xargs 2>/dev/null || echo "unknown")
                echo "      PID $pid: $CMD"
                echo "      –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $PWD_DIR"
            fi
        done
    else
        echo "   ‚ùå –ü—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã —Å main.py –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (–±–µ–∑ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—è)
    OTHER_PIDS=""
    if [ -n "$ALL_MAIN_PIDS" ]; then
        for pid in $ALL_MAIN_PIDS; do
            if ps -p $pid > /dev/null 2>&1; then
                PWD_DIR=$(pwdx $pid 2>/dev/null | cut -d: -f2 | xargs 2>/dev/null || echo "unknown")
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –ù–ï –Ω–∞—à –±–æ—Ç (–Ω–µ –≤ –Ω–∞—à–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏)
                if [[ "$PWD_DIR" != "$BOT_DIR" ]]; then
                    OTHER_PIDS="$OTHER_PIDS $pid"
                fi
            fi
        done
    fi
    
    if [ -n "$OTHER_PIDS" ]; then
        echo "   ‚ÑπÔ∏è  –î—Ä—É–≥–∏–µ Python –ø—Ä–æ—Ü–µ—Å—Å—ã —Å main.py –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:"
        for pid in $OTHER_PIDS; do
            if ps -p $pid > /dev/null 2>&1; then
                CMD=$(ps -p $pid -o cmd --no-headers 2>/dev/null)
                PWD_DIR=$(pwdx $pid 2>/dev/null | cut -d: -f2 | xargs 2>/dev/null || echo "unknown")
                echo "      PID $pid: $CMD"
                echo "      –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $PWD_DIR"
            fi
        done
    fi
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
echo "üìù –°—Ç–∞—Ç—É—Å –ª–æ–≥–æ–≤:"
if [ -f "$LOG_FILE" ]; then
    LOG_SIZE=$(du -h "$LOG_FILE" | cut -f1)
    LOG_LINES=$(wc -l < "$LOG_FILE")
    LOG_MODIFIED=$(stat -c %y "$LOG_FILE" 2>/dev/null || date -r "$LOG_FILE" 2>/dev/null)
    
    echo "   üìÅ –§–∞–π–ª: $LOG_FILE"
    echo "   üìè –†–∞–∑–º–µ—Ä: $LOG_SIZE ($LOG_LINES —Å—Ç—Ä–æ–∫)"
    echo "   üïê –ò–∑–º–µ–Ω–µ–Ω: $LOG_MODIFIED"
    
    # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥–µ
    echo "   üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –∑–∞–ø–∏—Å–∏:"
    tail -n 3 "$LOG_FILE" 2>/dev/null | sed 's/^/      /'
    
else
    echo "   ‚ùå –õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $LOG_FILE"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo "üêç –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:"
if [ -d "$VENV_DIR" ]; then
    echo "   ‚úÖ –ù–∞–π–¥–µ–Ω–æ: $VENV_DIR"
    
    if [ -f "$VENV_DIR/bin/python" ]; then
        PYTHON_VERSION=$("$VENV_DIR/bin/python" --version 2>&1)
        echo "   üêç –í–µ—Ä—Å–∏—è Python: $PYTHON_VERSION"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
        if [ -f "$VENV_DIR/bin/pip" ]; then
            echo "   üì¶ –ö–ª—é—á–µ–≤—ã–µ –ø–∞–∫–µ—Ç—ã:"
            "$VENV_DIR/bin/pip" list 2>/dev/null | grep -E "(telegram|openai|redis)" | sed 's/^/      /' || echo "      ‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤"
        fi
    fi
else
    echo "   ‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo "‚öôÔ∏è  –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:"
if [ -f "$BOT_DIR/.env" ]; then
    echo "   ‚úÖ .env —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö (–±–µ–∑ –≤—ã–≤–æ–¥–∞ –∑–Ω–∞—á–µ–Ω–∏–π)
    echo "   üîë –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
    for var in TELEGRAM_BOT_TOKEN OPENAI_API_KEY ASSISTANT_ID CHANNEL_ID REDIS_HOST; do
        if grep -q "^$var=" "$BOT_DIR/.env" 2>/dev/null; then
            echo "      ‚úÖ $var"
        else
            echo "      ‚ùå $var (–Ω–µ –Ω–∞–π–¥–µ–Ω–∞)"
        fi
    done
else
    echo "   ‚ùå .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≤–Ω–µ—à–Ω–∏–º —Å–µ—Ä–≤–∏—Å–∞–º
echo "üåê –°–µ—Ç–µ–≤—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:"
echo "   üîó –ò–Ω—Ç–µ—Ä–Ω–µ—Ç:"
if ping -c 1 google.com &> /dev/null; then
    echo "      ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "      ‚ùå –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É"
fi

echo "   üîó Telegram API:"
if curl -s --connect-timeout 5 https://api.telegram.org > /dev/null; then
    echo "      ‚úÖ Telegram API –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "      ‚ùå Telegram API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

echo "   üîó OpenAI API:"
if curl -s --connect-timeout 5 https://api.openai.com > /dev/null; then
    echo "      ‚úÖ OpenAI API –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "      ‚ùå OpenAI API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

echo ""

# –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã
echo "üíª –°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã:"
echo "   üß† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ CPU:"
top -bn1 | grep "Cpu(s)" | sed 's/^/      /'

echo "   üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:"
free -h | head -2 | sed 's/^/      /'

echo "   üíø –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞:"
df -h "$BOT_DIR" | tail -1 | sed 's/^/      /'

echo ""

# Git —Å—Ç–∞—Ç—É—Å
echo "üìã Git —Å—Ç–∞—Ç—É—Å:"
if [ -d "$BOT_DIR/.git" ]; then
    BRANCH=$(git branch --show-current 2>/dev/null || echo "unknown")
    COMMIT=$(git rev-parse --short HEAD 2>/dev/null || echo "unknown")
    
    echo "   üåø –í–µ—Ç–∫–∞: $BRANCH"
    echo "   üìù Commit: $COMMIT"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    if git diff --quiet 2>/dev/null; then
        echo "   ‚úÖ –ù–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π"
    else
        echo "   ‚ö†Ô∏è  –ï—Å—Ç—å –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π
    git fetch origin &>/dev/null
    LOCAL_COMMIT=$(git rev-parse HEAD 2>/dev/null)
    REMOTE_COMMIT=$(git rev-parse origin/$BRANCH 2>/dev/null || echo "")
    
    if [ -n "$REMOTE_COMMIT" ] && [ "$LOCAL_COMMIT" != "$REMOTE_COMMIT" ]; then
        echo "   üì• –î–æ—Å—Ç—É–ø–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"
    else
        echo "   ‚úÖ –ö–æ–¥ –∞–∫—Ç—É–∞–ª–µ–Ω"
    fi
else
    echo "   ‚ùå –ù–µ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
fi

echo ""
echo "=================================="

# –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
echo "üí° –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
echo "   ‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫:      ./start.sh"
echo "   ‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞:   ./stop.sh"
echo "   üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:  ./restart.sh"
echo "   üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ:  ./update.sh"
echo "   üìù –õ–æ–≥–∏:        tail -f $LOG_FILE" 