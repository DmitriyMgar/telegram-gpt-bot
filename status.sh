#!/bin/bash

# Telegram GPT Bot - Status Script
# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
SERVICE_NAME="telegram-gpt-bot.service"

echo "üìä –°—Ç–∞—Ç—É—Å Telegram GPT Bot"
echo "=========================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ systemd —Å–µ—Ä–≤–∏—Å–∞
if systemctl is-enabled --quiet "$SERVICE_NAME" 2>/dev/null; then
    echo "üîç Systemd —Å–µ—Ä–≤–∏—Å: –ù–ê–ô–î–ï–ù"
    echo "üìã –ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞: $SERVICE_NAME"
    
    # –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞
    STATUS=$(systemctl is-active "$SERVICE_NAME")
    case "$STATUS" in
        "active")
            echo "‚úÖ –°—Ç–∞—Ç—É—Å: –ó–ê–ü–£–©–ï–ù (active)"
            ;;
        "inactive")
            echo "‚èπÔ∏è  –°—Ç–∞—Ç—É—Å: –û–°–¢–ê–ù–û–í–õ–ï–ù (inactive)"
            ;;
        "failed")
            echo "‚ùå –°—Ç–∞—Ç—É—Å: –û–®–ò–ë–ö–ê (failed)"
            ;;
        *)
            echo "‚ö†Ô∏è  –°—Ç–∞—Ç—É—Å: $STATUS"
            ;;
    esac
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    if [ "$STATUS" = "active" ]; then
        echo ""
        echo "üìã –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
        systemctl status "$SERVICE_NAME" --no-pager -l
        
        echo ""
        echo "üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"
        systemctl show "$SERVICE_NAME" --property=MainPID,CPUAccounting,MemoryAccounting 2>/dev/null
        
        # –ù–∞—Ö–æ–¥–∏–º PID –ø—Ä–æ—Ü–µ—Å—Å–∞
        MAIN_PID=$(systemctl show "$SERVICE_NAME" --property=MainPID --value 2>/dev/null)
        if [ -n "$MAIN_PID" ] && [ "$MAIN_PID" != "0" ]; then
            echo "üÜî –û—Å–Ω–æ–≤–Ω–æ–π PID: $MAIN_PID"
            echo "üíæ –ü–∞–º—è—Ç—å: $(ps -p $MAIN_PID -o rss= 2>/dev/null | awk '{print int($1/1024)" MB"}' || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")"
            echo "‚è±Ô∏è  CPU: $(ps -p $MAIN_PID -o %cpu= 2>/dev/null | awk '{print $1"%"}' || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")"
        fi
    fi
    
    echo ""
    echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–º:"
    echo "   –ó–∞–ø—É—Å–∫:      sudo systemctl start $SERVICE_NAME"
    echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞:   sudo systemctl stop $SERVICE_NAME"
    echo "   –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:  sudo systemctl restart $SERVICE_NAME"
    echo "   –õ–æ–≥–∏:        sudo journalctl -u $SERVICE_NAME -f"
    
else
    echo "‚ö†Ô∏è  Systemd —Å–µ—Ä–≤–∏—Å: –ù–ï –ù–ê–ô–î–ï–ù"
    echo ""
    echo "üîç –ü–æ–∏—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –≤—Ä—É—á–Ω—É—é..."
    
    # –ü–æ–∏—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞
    BOT_PIDS=$(pgrep -f "python.*main.py" | while read pid; do
        if pwdx "$pid" 2>/dev/null | grep -q "$SCRIPT_DIR"; then
            echo "$pid"
        fi
    done)
    
    if [ -n "$BOT_PIDS" ]; then
        echo "‚úÖ –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ—Ü–µ—Å—Å—ã –±–æ—Ç–∞:"
        for pid in $BOT_PIDS; do
            echo "   üÜî PID: $pid"
            echo "   üìÇ –ö–æ–º–∞–Ω–¥–∞: $(ps -p $pid -o cmd --no-headers 2>/dev/null)"
            echo "   üìç –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwdx $pid 2>/dev/null | cut -d: -f2 | xargs)"
            echo "   üíæ –ü–∞–º—è—Ç—å: $(ps -p $pid -o rss= 2>/dev/null | awk '{print int($1/1024)" MB"}' || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")"
            echo "   ‚è±Ô∏è  CPU: $(ps -p $pid -o %cpu= 2>/dev/null | awk '{print $1"%"}' || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")"
            echo "   ‚è∞ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: $(ps -p $pid -o lstart= 2>/dev/null || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")"
            echo "   ---"
        done
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º PID —Ñ–∞–π–ª
        if [ -f "$SCRIPT_DIR/bot.pid" ]; then
            PID_FROM_FILE=$(cat "$SCRIPT_DIR/bot.pid")
            echo "üìÑ PID –∏–∑ —Ñ–∞–π–ª–∞: $PID_FROM_FILE"
            if echo "$BOT_PIDS" | grep -q "$PID_FROM_FILE"; then
                echo "‚úÖ PID —Ñ–∞–π–ª —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–ø—É—â–µ–Ω–Ω–æ–º—É –ø—Ä–æ—Ü–µ—Å—Å—É"
            else
                echo "‚ö†Ô∏è  PID —Ñ–∞–π–ª –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞–º (—É—Å—Ç–∞—Ä–µ–ª?)"
            fi
        else
            echo "üìÑ PID —Ñ–∞–π–ª: –ù–ï –ù–ê–ô–î–ï–ù"
        fi
        
    else
        echo "‚ùå –ü—Ä–æ—Ü–µ—Å—Å—ã –±–æ—Ç–∞ –ù–ï –ù–ê–ô–î–ï–ù–´"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å—Ç–∞—Ç–∫–∏ PID —Ñ–∞–π–ª–∞
        if [ -f "$SCRIPT_DIR/bot.pid" ]; then
            echo "üìÑ –ù–∞–π–¥–µ–Ω —É—Å—Ç–∞—Ä–µ–≤—à–∏–π PID —Ñ–∞–π–ª"
            echo "üßπ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–¥–∞–ª–∏—Ç—å: rm $SCRIPT_DIR/bot.pid"
        fi
    fi
    
    echo ""
    echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–µ–∑ systemd:"
    echo "   –ó–∞–ø—É—Å–∫:      ./start.sh"
    echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞:   ./stop.sh"
    echo "   –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫:  ./restart.sh"
    echo "   –õ–æ–≥–∏:        tail -f $SCRIPT_DIR/bot.log"
fi

echo ""
echo "üìÅ –§–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞:"
echo "   –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª: $([ -f "$SCRIPT_DIR/main.py" ] && echo "‚úÖ –ù–ê–ô–î–ï–ù" || echo "‚ùå –ù–ï –ù–ê–ô–î–ï–ù")"
echo "   –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: $([ -f "$SCRIPT_DIR/.env" ] && echo "‚úÖ –ù–ê–ô–î–ï–ù" || echo "‚ùå –ù–ï –ù–ê–ô–î–ï–ù")"
echo "   –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ: $([ -d "$SCRIPT_DIR/venv" ] && echo "‚úÖ –ù–ê–ô–î–ï–ù–û" || echo "‚ùå –ù–ï –ù–ê–ô–î–ï–ù–û")"
echo "   –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: $([ -f "$SCRIPT_DIR/requirements.txt" ] && echo "‚úÖ –ù–ê–ô–î–ï–ù–´" || echo "‚ùå –ù–ï –ù–ê–ô–î–ï–ù–´")"
echo "   –õ–æ–≥ —Ñ–∞–π–ª: $([ -f "$SCRIPT_DIR/bot.log" ] && echo "‚úÖ –ù–ê–ô–î–ï–ù ($(stat -c%s "$SCRIPT_DIR/bot.log" 2>/dev/null | awk '{print int($1/1024)" KB"}' || echo "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"))" || echo "‚ùå –ù–ï –ù–ê–ô–î–ï–ù")"

echo ""
echo "üîÑ –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:"
echo "   –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —ç—Ç–æ—Ç —Å—Ç–∞—Ç—É—Å: ./status.sh"
if systemctl is-enabled --quiet "$SERVICE_NAME" 2>/dev/null; then
    echo "   –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞:    ./restart.sh (–∏–ª–∏ sudo systemctl restart $SERVICE_NAME)"
    echo "   –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:        sudo journalctl -u $SERVICE_NAME -f"
else
    echo "   –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞:    ./restart.sh"
    echo "   –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:        tail -f $SCRIPT_DIR/bot.log" 